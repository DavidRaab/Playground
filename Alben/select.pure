#!/usr/bin/env perl
use strict;
use warnings;
use v5.32;
use Data::Printer;
use DBI;
use Text::Table;
use JSON;
use Getopt::Long;

# Argument Handling
my $search  = "%";
my $json    = 0;
my $verbose = 0;
GetOptions(
    "j|json"     => \$json,
    "s|search=s" => \$search,
);

# Database Connection and fetching data
my $dbh = DBI->connect("dbi:SQLite:dbname=alben.sqlite3", "", "", { RaiseError => 1, AutoCommit => 1 });
my $sth = $dbh->prepare(<<EOF
    SELECT    artist.name, album.name, song.track, song.name, song.duration
    FROM      artists artist
    LEFT JOIN albums album ON artist.id = album.artist_id
    LEFT JOIN songs  song  ON album.id  = song.album_id
    WHERE     song.name LIKE ?
EOF
);
$sth->execute($search);

# Generate JSON
if ($json) {
    my $rows = $sth->fetchall_arrayref();
    my $json = {};
    for my $row ( @$rows ) {
        push @{$json->{Songs}}, {
            Artist  => $row->[0],
            Album   => $row->[1],
            TrackNo => $row->[2],
            Song    => $row->[3],
            Seconds => $row->[4],
        };
    }
    printf "%s\n", (JSON->new->utf8->pretty(1)->encode($json));
}
# Generate Table
else {
    my $rows = $sth->fetchall_arrayref();
    my $table = Text::Table->new("Artist", "Album Name", "Track", "Song", "Duration");
    for my $row ( @$rows ) {
        $table->add(@$row);
    };
    printf "%s\n", ($table->stringify);
}

$dbh->disconnect;
